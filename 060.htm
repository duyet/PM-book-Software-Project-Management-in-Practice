<html>

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=Generator content="Microsoft Word 10 (filtered)">
<title>9.4 SUMMARY</title>

<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:Wingdings;
	panose-1:5 0 0 0 0 0 0 0 0 0;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{margin:0cm;
	margin-bottom:.0001pt;
	font-size:12.0pt;
	font-family:"Times New Roman";}
h3
	{margin-right:0cm;
	margin-left:0cm;
	font-size:13.5pt;
	font-family:"Times New Roman";
	color:#354278;}
p.doctext, li.doctext, div.doctext
	{margin-right:0cm;
	margin-left:0cm;
	font-size:10.5pt;
	font-family:"Times New Roman";
	color:black;}
p.doclist, li.doclist, div.doclist
	{margin-right:0cm;
	margin-left:0cm;
	font-size:10.5pt;
	font-family:"Times New Roman";
	color:black;}
@page Section1
	{size:595.3pt 841.9pt;
	margin:3.0cm 2.0cm 3.0cm 2.0cm;}
div.Section1
	{page:Section1;}
 /* List Definitions */
 ol
	{margin-bottom:0cm;}
ul
	{margin-bottom:0cm;}
-->
</style>

</head>

<body lang=DA>

<div class=Section1>

<h3><span lang=EN-GB style='font-size:15.0pt;font-family:Arial'>9.4 SUMMARY</span></h3>

<p class=doctext><span lang=EN-GB>A software product typically consists of many
programs and documents, and these items change and evolve before they are ready
for the final system. For this reason, software configuration management is an
important issue.</span></p>

<p class=doctext><span lang=EN-GB>Following are some of the lessons from the CM
process followed at Infosys:</span></p>

<p class=doclist style='margin-left:36.0pt;text-indent:-18.0pt'><span
lang=EN-GB style='font-size:10.0pt;font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-GB>Define the CM process so that it lets projects
handle concurrent updates, undo a change, obtain the latest version of a
program, determine the status of a program, and prevent unauthorized changes. Use
version control, change request tracking, and library management mechanisms to
support these capabilities.</span></p>

<p class=doclist style='margin-left:36.0pt;text-indent:-18.0pt'><span
lang=EN-GB style='font-size:10.0pt;font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-GB>Develop a CM plan separately from the project
management plan. The CM plan must specify the environment, configuration items
and their naming convention, storage areas for the items in different states,
and the method of managing changes to the items, including version numbering
and reconciliation, access control, and release and backup policies.</span></p>

<p class=doclist style='margin-left:36.0pt;text-indent:-18.0pt'><span
lang=EN-GB style='font-size:10.0pt;font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-GB>Perform CM audits and status checking to ensure
that the CM plan is being followed.</span></p>

<p class=doctext><span lang=EN-GB>With respect to the CMM, the activities
discussed in this chapter satisfy many of the requirements of the Software
Configuration Management KPA of level 2. Implementation methods for requirement
changes satisfy some aspects of the Requirements Management KPA. The baselining
and control of work products other than code also satisfy the baselining
requirements of KPAs such as Requirements Management and Software Project
Planning.</span></p>

<p class=MsoNormal><span lang=EN-GB>&nbsp;</span></p>

</div>

</body>

</html>
